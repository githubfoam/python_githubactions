name: "python app CI workflow windows"


on:
  push:
    branches: [ dev ]
  # pull_request:
  #   branches: [ githubactions_powershell ]


jobs:

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python#using-a-specific-python-version
  build-python-windows-latest:
    name: "python matrix excluding a version windows-latest"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [windows-latest]
        # python-version: [2.7, 3.6, 3.7, 3.8, pypy2, pypy3]
        python-version: [2.7, 3.6, 3.7]
        exclude:
          # - os: macos-latest
          #   python-version: 3.6
          - os: windows-latest
            python-version: 3.6
    steps:
    - uses: actions/checkout@v2
    - name: "Set up Python ${{ matrix.python-version }}"
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    # You can test your matrix by printing the current Python version
    - name: "Display Python version"
      run: python -c "import sys; print(sys.version)"          

# https://docs.github.com/en/free-pro-team@latest/actions/guides/building-and-testing-python#using-a-specific-python-version
  build-python-windows-matrix:
    name: "python matrix windows matrix excluding a version "
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        # os: [ubuntu-latest, macos-latest, windows-latest]
        os: [windows-latest,windows-2019,windows-2016]
        # python-version: [2.7, 3.6, 3.7, 3.8, pypy2, pypy3]
        python-version: [2.7, 3.6, 3.7]
        exclude:
          # - os: macos-latest
          #   python-version: 3.6
          - os: windows-latest
            python-version: 3.6
    steps:
    - uses: actions/checkout@v2
    - name: "Set up Python ${{ matrix.python-version }}"
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    # You can test your matrix by printing the current Python version
    - name: "Display Python version"
      run: python -c "import sys; print(sys.version)"  

  windows-latest-venv:
    name: "Microsoft Windows Server 2019 Datacenter terraform"  
    runs-on: windows-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v1
    - name: "osfingerprinting"
      run: systeminfo | more       
    - name: "Deploy pyhton 3.8.1 virtualenv" 
      run: |
        python --version 
        choco install python --version 3.8.1
        pip install virtualenv
        virtualenv $HOME/venv
        . $HOME/venv/Scripts/activate
        python --version
        pip install -r requirements.txt 
        echo $HOME
        choco install terraform
        terraform -help
        deactivate           